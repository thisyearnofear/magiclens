// This file is auto-generated by @hey-api/openapi-ts

export type ArtistAsset = {
    id?: string;
    name: string;
    file_path: string;
    thumbnail_path?: string | null;
    asset_type: string;
    category: string;
    artist_id: string;
    file_size: number;
    usage_count?: number;
    metadata?: {
        [key: string]: unknown;
    } | null;
    is_public?: boolean;
    created_at?: string;
    last_updated?: string;
};

export type BodyAiAnalysisServiceAnalyzeVideoForOverlays = {
    video_id: string;
};

export type BodyAiAnalysisServiceGetSmartOverlayRecommendations = {
    video_id: string;
    limit: number;
};

export type BodyAssetServiceDeleteAsset = {
    asset_id: string;
};

export type BodyAssetServiceGetAsset = {
    asset_id: string;
};

export type BodyAssetServiceGetAssets = {
    category?: string | null;
    artist_id?: string | null;
    limit: number;
    offset: number;
};

export type BodyAssetServiceIncrementAssetUsage = {
    asset_id: string;
};

export type BodyAssetServiceSearchAssets = {
    query: string;
    category?: string | null;
    limit: number;
};

export type BodyAssetServiceUpdateAsset = {
    asset_id: string;
    name?: string | null;
    category?: string | null;
    is_public?: boolean | null;
};

export type BodyCollaborationServiceAddOverlayToCollaboration = {
    collaboration_id: string;
    asset_id: string;
    position_data: {
        [key: string]: unknown;
    };
    timing_data: {
        [key: string]: unknown;
    };
    layer_order: number;
};

export type BodyCollaborationServiceDeleteOverlay = {
    overlay_id: string;
};

export type BodyCollaborationServiceGetCollaboration = {
    collaboration_id: string;
};

export type BodyCollaborationServiceGetCollaborationOverlays = {
    collaboration_id: string;
};

export type BodyCollaborationServiceGetCollaborationsForMyVideos = {
    status?: string | null;
};

export type BodyCollaborationServiceGetMyCollaborations = {
    status?: string | null;
};

export type BodyCollaborationServiceStartCollaboration = {
    video_id: string;
    revenue_split: number;
};

export type BodyCollaborationServiceUpdateCollaborationStatus = {
    collaboration_id: string;
    status: string;
    submission_notes?: string | null;
    feedback?: string | null;
};

export type BodyCollaborationServiceUpdateOverlay = {
    overlay_id: string;
    position_data?: {
        [key: string]: unknown;
    } | null;
    timing_data?: {
        [key: string]: unknown;
    } | null;
    layer_order?: number | null;
};

export type BodyRecommendationEngineGetSimilarStyleRecommendations = {
    video_id: string;
    reference_asset_id: string;
    limit: number;
};

export type BodyRecommendationEngineGetVideoOverlayRecommendations = {
    video_id: string;
    recommendation_type: string;
    limit: number;
};

export type BodyRecommendationEngineTrackRecommendationInteraction = {
    video_id: string;
    asset_id: string;
    action: string;
    metadata?: {
        [key: string]: unknown;
    } | null;
};

export type BodyRenderServiceCancelRender = {
    render_id: string;
};

export type BodyRenderServiceGetCollaborationRenders = {
    collaboration_id: string;
};

export type BodyRenderServiceGetRenderStatus = {
    render_id: string;
};

export type BodyRenderServiceQueueRender = {
    collaboration_id: string;
    render_settings?: {
        [key: string]: unknown;
    } | null;
};

export type BodyRenderServiceRetryRender = {
    render_id: string;
};

export type BodyUserServiceGetPublicProfile = {
    user_id: string;
};

export type BodyVideoServiceDeleteVideo = {
    video_id: string;
};

export type BodyVideoServiceGetVideo = {
    video_id: string;
};

export type BodyVideoServiceGetVideos = {
    category?: string | null;
    limit: number;
    offset: number;
};

export type BodyVideoServiceSearchVideos = {
    query: string;
    category?: string | null;
    limit: number;
};

export type BodyVideoServiceUpdateVideo = {
    video_id: string;
    title?: string | null;
    description?: string | null;
    category?: string | null;
};

export type BodyAssetServiceUploadAsset = {
    asset_file: Blob | File;
    category?: string;
    is_public?: boolean;
    name: string;
};

export type BodyUserServiceCreateUserProfile = {
    avatar?: (Blob | File) | null;
    bio?: string | null;
    user_type: string;
    username: string;
};

export type BodyUserServiceUpdateUserProfile = {
    avatar?: (Blob | File) | null;
    bio?: string | null;
    username?: string | null;
};

export type BodyVideoServiceUploadVideo = {
    category?: string;
    description?: string | null;
    title: string;
    video_file: Blob | File;
};

export type Collaboration = {
    id?: string;
    video_id: string;
    artist_id: string;
    status?: string;
    revenue_split?: number;
    submission_notes?: string | null;
    feedback?: string | null;
    version_number?: number;
    render_data?: {
        [key: string]: unknown;
    } | null;
    created_at?: string;
    submitted_at?: string | null;
    completed_at?: string | null;
    last_updated?: string;
};

export type HttpValidationError = {
    detail?: Array<ValidationError>;
};

export type Overlay = {
    id?: string;
    collaboration_id: string;
    asset_id: string;
    position_data: {
        [key: string]: unknown;
    };
    timing_data: {
        [key: string]: unknown;
    };
    layer_order?: number;
    animation_data?: {
        [key: string]: unknown;
    };
    created_at?: string;
    last_updated?: string;
};

export type Render = {
    id?: string;
    collaboration_id: string;
    output_path?: string | null;
    render_status?: string;
    progress?: number;
    error_message?: string | null;
    render_settings?: {
        [key: string]: unknown;
    };
    processing_time?: number | null;
    file_size?: number | null;
    created_at?: string;
    started_at?: string | null;
    completed_at?: string | null;
};

export type UserProfile = {
    id?: string;
    user_id: string;
    username: string;
    user_type: string;
    avatar_url?: string | null;
    bio?: string | null;
    portfolio_data?: {
        [key: string]: unknown;
    } | null;
    earnings_total?: number;
    is_verified?: boolean;
    created_at?: string;
    last_updated?: string;
};

export type ValidationError = {
    loc: Array<string | number>;
    msg: string;
    type: string;
};

export type Video = {
    id?: string;
    title: string;
    description?: string | null;
    category: string;
    duration: number;
    file_path: string;
    thumbnail_path?: string | null;
    uploader_id: string;
    status?: string;
    metadata?: {
        [key: string]: unknown;
    } | null;
    view_count?: number;
    collaboration_count?: number;
    created_at?: string;
    last_updated?: string;
};

export type UserServiceCreateUserProfileData = {
    body: BodyUserServiceCreateUserProfile;
    path?: never;
    query?: never;
    url: '/api/user_service/create_user_profile';
};

export type UserServiceCreateUserProfileErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UserServiceCreateUserProfileError = UserServiceCreateUserProfileErrors[keyof UserServiceCreateUserProfileErrors];

export type UserServiceCreateUserProfileResponses = {
    /**
     * Successful Response
     */
    200: UserProfile;
};

export type UserServiceCreateUserProfileResponse = UserServiceCreateUserProfileResponses[keyof UserServiceCreateUserProfileResponses];

export type UserServiceGetUserProfileData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/user_service/get_user_profile';
};

export type UserServiceGetUserProfileResponses = {
    /**
     * Successful Response
     */
    200: UserProfile | null;
};

export type UserServiceGetUserProfileResponse = UserServiceGetUserProfileResponses[keyof UserServiceGetUserProfileResponses];

export type UserServiceGetPublicProfileData = {
    body: BodyUserServiceGetPublicProfile;
    path?: never;
    query?: never;
    url: '/api/user_service/get_public_profile';
};

export type UserServiceGetPublicProfileErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UserServiceGetPublicProfileError = UserServiceGetPublicProfileErrors[keyof UserServiceGetPublicProfileErrors];

export type UserServiceGetPublicProfileResponses = {
    /**
     * Successful Response
     */
    200: UserProfile | null;
};

export type UserServiceGetPublicProfileResponse = UserServiceGetPublicProfileResponses[keyof UserServiceGetPublicProfileResponses];

export type UserServiceUpdateUserProfileData = {
    body?: BodyUserServiceUpdateUserProfile;
    path?: never;
    query?: never;
    url: '/api/user_service/update_user_profile';
};

export type UserServiceUpdateUserProfileErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UserServiceUpdateUserProfileError = UserServiceUpdateUserProfileErrors[keyof UserServiceUpdateUserProfileErrors];

export type UserServiceUpdateUserProfileResponses = {
    /**
     * Successful Response
     */
    200: UserProfile;
};

export type UserServiceUpdateUserProfileResponse = UserServiceUpdateUserProfileResponses[keyof UserServiceUpdateUserProfileResponses];

export type UserServiceGetArtistsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/user_service/get_artists';
};

export type UserServiceGetArtistsResponses = {
    /**
     * Successful Response
     */
    200: Array<UserProfile>;
};

export type UserServiceGetArtistsResponse = UserServiceGetArtistsResponses[keyof UserServiceGetArtistsResponses];

export type UserServiceGetVideographersData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/user_service/get_videographers';
};

export type UserServiceGetVideographersResponses = {
    /**
     * Successful Response
     */
    200: Array<UserProfile>;
};

export type UserServiceGetVideographersResponse = UserServiceGetVideographersResponses[keyof UserServiceGetVideographersResponses];

export type VideoServiceUploadVideoData = {
    body: BodyVideoServiceUploadVideo;
    path?: never;
    query?: never;
    url: '/api/video_service/upload_video';
};

export type VideoServiceUploadVideoErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type VideoServiceUploadVideoError = VideoServiceUploadVideoErrors[keyof VideoServiceUploadVideoErrors];

export type VideoServiceUploadVideoResponses = {
    /**
     * Successful Response
     */
    200: Video;
};

export type VideoServiceUploadVideoResponse = VideoServiceUploadVideoResponses[keyof VideoServiceUploadVideoResponses];

export type VideoServiceGetVideosData = {
    body: BodyVideoServiceGetVideos;
    path?: never;
    query?: never;
    url: '/api/video_service/get_videos';
};

export type VideoServiceGetVideosErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type VideoServiceGetVideosError = VideoServiceGetVideosErrors[keyof VideoServiceGetVideosErrors];

export type VideoServiceGetVideosResponses = {
    /**
     * Successful Response
     */
    200: Array<Video>;
};

export type VideoServiceGetVideosResponse = VideoServiceGetVideosResponses[keyof VideoServiceGetVideosResponses];

export type VideoServiceGetVideoData = {
    body: BodyVideoServiceGetVideo;
    path?: never;
    query?: never;
    url: '/api/video_service/get_video';
};

export type VideoServiceGetVideoErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type VideoServiceGetVideoError = VideoServiceGetVideoErrors[keyof VideoServiceGetVideoErrors];

export type VideoServiceGetVideoResponses = {
    /**
     * Successful Response
     */
    200: Video | null;
};

export type VideoServiceGetVideoResponse = VideoServiceGetVideoResponses[keyof VideoServiceGetVideoResponses];

export type VideoServiceGetMyVideosData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/video_service/get_my_videos';
};

export type VideoServiceGetMyVideosResponses = {
    /**
     * Successful Response
     */
    200: Array<Video>;
};

export type VideoServiceGetMyVideosResponse = VideoServiceGetMyVideosResponses[keyof VideoServiceGetMyVideosResponses];

export type VideoServiceUpdateVideoData = {
    body: BodyVideoServiceUpdateVideo;
    path?: never;
    query?: never;
    url: '/api/video_service/update_video';
};

export type VideoServiceUpdateVideoErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type VideoServiceUpdateVideoError = VideoServiceUpdateVideoErrors[keyof VideoServiceUpdateVideoErrors];

export type VideoServiceUpdateVideoResponses = {
    /**
     * Successful Response
     */
    200: Video;
};

export type VideoServiceUpdateVideoResponse = VideoServiceUpdateVideoResponses[keyof VideoServiceUpdateVideoResponses];

export type VideoServiceDeleteVideoData = {
    body: BodyVideoServiceDeleteVideo;
    path?: never;
    query?: never;
    url: '/api/video_service/delete_video';
};

export type VideoServiceDeleteVideoErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type VideoServiceDeleteVideoError = VideoServiceDeleteVideoErrors[keyof VideoServiceDeleteVideoErrors];

export type VideoServiceDeleteVideoResponses = {
    /**
     * Successful Response
     */
    200: boolean;
};

export type VideoServiceDeleteVideoResponse = VideoServiceDeleteVideoResponses[keyof VideoServiceDeleteVideoResponses];

export type VideoServiceGetVideoCategoriesData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/video_service/get_video_categories';
};

export type VideoServiceGetVideoCategoriesResponses = {
    /**
     * Successful Response
     */
    200: Array<string>;
};

export type VideoServiceGetVideoCategoriesResponse = VideoServiceGetVideoCategoriesResponses[keyof VideoServiceGetVideoCategoriesResponses];

export type VideoServiceSearchVideosData = {
    body: BodyVideoServiceSearchVideos;
    path?: never;
    query?: never;
    url: '/api/video_service/search_videos';
};

export type VideoServiceSearchVideosErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type VideoServiceSearchVideosError = VideoServiceSearchVideosErrors[keyof VideoServiceSearchVideosErrors];

export type VideoServiceSearchVideosResponses = {
    /**
     * Successful Response
     */
    200: Array<Video>;
};

export type VideoServiceSearchVideosResponse = VideoServiceSearchVideosResponses[keyof VideoServiceSearchVideosResponses];

export type AssetServiceUploadAssetData = {
    body: BodyAssetServiceUploadAsset;
    path?: never;
    query?: never;
    url: '/api/asset_service/upload_asset';
};

export type AssetServiceUploadAssetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type AssetServiceUploadAssetError = AssetServiceUploadAssetErrors[keyof AssetServiceUploadAssetErrors];

export type AssetServiceUploadAssetResponses = {
    /**
     * Successful Response
     */
    200: ArtistAsset;
};

export type AssetServiceUploadAssetResponse = AssetServiceUploadAssetResponses[keyof AssetServiceUploadAssetResponses];

export type AssetServiceGetAssetsData = {
    body: BodyAssetServiceGetAssets;
    path?: never;
    query?: never;
    url: '/api/asset_service/get_assets';
};

export type AssetServiceGetAssetsErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type AssetServiceGetAssetsError = AssetServiceGetAssetsErrors[keyof AssetServiceGetAssetsErrors];

export type AssetServiceGetAssetsResponses = {
    /**
     * Successful Response
     */
    200: Array<ArtistAsset>;
};

export type AssetServiceGetAssetsResponse = AssetServiceGetAssetsResponses[keyof AssetServiceGetAssetsResponses];

export type AssetServiceGetMyAssetsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/asset_service/get_my_assets';
};

export type AssetServiceGetMyAssetsResponses = {
    /**
     * Successful Response
     */
    200: Array<ArtistAsset>;
};

export type AssetServiceGetMyAssetsResponse = AssetServiceGetMyAssetsResponses[keyof AssetServiceGetMyAssetsResponses];

export type AssetServiceGetAssetData = {
    body: BodyAssetServiceGetAsset;
    path?: never;
    query?: never;
    url: '/api/asset_service/get_asset';
};

export type AssetServiceGetAssetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type AssetServiceGetAssetError = AssetServiceGetAssetErrors[keyof AssetServiceGetAssetErrors];

export type AssetServiceGetAssetResponses = {
    /**
     * Successful Response
     */
    200: ArtistAsset | null;
};

export type AssetServiceGetAssetResponse = AssetServiceGetAssetResponses[keyof AssetServiceGetAssetResponses];

export type AssetServiceUpdateAssetData = {
    body: BodyAssetServiceUpdateAsset;
    path?: never;
    query?: never;
    url: '/api/asset_service/update_asset';
};

export type AssetServiceUpdateAssetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type AssetServiceUpdateAssetError = AssetServiceUpdateAssetErrors[keyof AssetServiceUpdateAssetErrors];

export type AssetServiceUpdateAssetResponses = {
    /**
     * Successful Response
     */
    200: ArtistAsset;
};

export type AssetServiceUpdateAssetResponse = AssetServiceUpdateAssetResponses[keyof AssetServiceUpdateAssetResponses];

export type AssetServiceDeleteAssetData = {
    body: BodyAssetServiceDeleteAsset;
    path?: never;
    query?: never;
    url: '/api/asset_service/delete_asset';
};

export type AssetServiceDeleteAssetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type AssetServiceDeleteAssetError = AssetServiceDeleteAssetErrors[keyof AssetServiceDeleteAssetErrors];

export type AssetServiceDeleteAssetResponses = {
    /**
     * Successful Response
     */
    200: boolean;
};

export type AssetServiceDeleteAssetResponse = AssetServiceDeleteAssetResponses[keyof AssetServiceDeleteAssetResponses];

export type AssetServiceGetAssetCategoriesData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/asset_service/get_asset_categories';
};

export type AssetServiceGetAssetCategoriesResponses = {
    /**
     * Successful Response
     */
    200: Array<string>;
};

export type AssetServiceGetAssetCategoriesResponse = AssetServiceGetAssetCategoriesResponses[keyof AssetServiceGetAssetCategoriesResponses];

export type AssetServiceSearchAssetsData = {
    body: BodyAssetServiceSearchAssets;
    path?: never;
    query?: never;
    url: '/api/asset_service/search_assets';
};

export type AssetServiceSearchAssetsErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type AssetServiceSearchAssetsError = AssetServiceSearchAssetsErrors[keyof AssetServiceSearchAssetsErrors];

export type AssetServiceSearchAssetsResponses = {
    /**
     * Successful Response
     */
    200: Array<ArtistAsset>;
};

export type AssetServiceSearchAssetsResponse = AssetServiceSearchAssetsResponses[keyof AssetServiceSearchAssetsResponses];

export type AssetServiceIncrementAssetUsageData = {
    body: BodyAssetServiceIncrementAssetUsage;
    path?: never;
    query?: never;
    url: '/api/asset_service/increment_asset_usage';
};

export type AssetServiceIncrementAssetUsageErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type AssetServiceIncrementAssetUsageError = AssetServiceIncrementAssetUsageErrors[keyof AssetServiceIncrementAssetUsageErrors];

export type AssetServiceIncrementAssetUsageResponses = {
    /**
     * Successful Response
     */
    200: boolean;
};

export type AssetServiceIncrementAssetUsageResponse = AssetServiceIncrementAssetUsageResponses[keyof AssetServiceIncrementAssetUsageResponses];

export type CollaborationServiceStartCollaborationData = {
    body: BodyCollaborationServiceStartCollaboration;
    path?: never;
    query?: never;
    url: '/api/collaboration_service/start_collaboration';
};

export type CollaborationServiceStartCollaborationErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CollaborationServiceStartCollaborationError = CollaborationServiceStartCollaborationErrors[keyof CollaborationServiceStartCollaborationErrors];

export type CollaborationServiceStartCollaborationResponses = {
    /**
     * Successful Response
     */
    200: Collaboration;
};

export type CollaborationServiceStartCollaborationResponse = CollaborationServiceStartCollaborationResponses[keyof CollaborationServiceStartCollaborationResponses];

export type CollaborationServiceGetMyCollaborationsData = {
    body: BodyCollaborationServiceGetMyCollaborations;
    path?: never;
    query?: never;
    url: '/api/collaboration_service/get_my_collaborations';
};

export type CollaborationServiceGetMyCollaborationsErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CollaborationServiceGetMyCollaborationsError = CollaborationServiceGetMyCollaborationsErrors[keyof CollaborationServiceGetMyCollaborationsErrors];

export type CollaborationServiceGetMyCollaborationsResponses = {
    /**
     * Successful Response
     */
    200: Array<Collaboration>;
};

export type CollaborationServiceGetMyCollaborationsResponse = CollaborationServiceGetMyCollaborationsResponses[keyof CollaborationServiceGetMyCollaborationsResponses];

export type CollaborationServiceGetCollaborationsForMyVideosData = {
    body: BodyCollaborationServiceGetCollaborationsForMyVideos;
    path?: never;
    query?: never;
    url: '/api/collaboration_service/get_collaborations_for_my_videos';
};

export type CollaborationServiceGetCollaborationsForMyVideosErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CollaborationServiceGetCollaborationsForMyVideosError = CollaborationServiceGetCollaborationsForMyVideosErrors[keyof CollaborationServiceGetCollaborationsForMyVideosErrors];

export type CollaborationServiceGetCollaborationsForMyVideosResponses = {
    /**
     * Successful Response
     */
    200: Array<Collaboration>;
};

export type CollaborationServiceGetCollaborationsForMyVideosResponse = CollaborationServiceGetCollaborationsForMyVideosResponses[keyof CollaborationServiceGetCollaborationsForMyVideosResponses];

export type CollaborationServiceGetCollaborationData = {
    body: BodyCollaborationServiceGetCollaboration;
    path?: never;
    query?: never;
    url: '/api/collaboration_service/get_collaboration';
};

export type CollaborationServiceGetCollaborationErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CollaborationServiceGetCollaborationError = CollaborationServiceGetCollaborationErrors[keyof CollaborationServiceGetCollaborationErrors];

export type CollaborationServiceGetCollaborationResponses = {
    /**
     * Successful Response
     */
    200: Collaboration | null;
};

export type CollaborationServiceGetCollaborationResponse = CollaborationServiceGetCollaborationResponses[keyof CollaborationServiceGetCollaborationResponses];

export type CollaborationServiceUpdateCollaborationStatusData = {
    body: BodyCollaborationServiceUpdateCollaborationStatus;
    path?: never;
    query?: never;
    url: '/api/collaboration_service/update_collaboration_status';
};

export type CollaborationServiceUpdateCollaborationStatusErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CollaborationServiceUpdateCollaborationStatusError = CollaborationServiceUpdateCollaborationStatusErrors[keyof CollaborationServiceUpdateCollaborationStatusErrors];

export type CollaborationServiceUpdateCollaborationStatusResponses = {
    /**
     * Successful Response
     */
    200: Collaboration;
};

export type CollaborationServiceUpdateCollaborationStatusResponse = CollaborationServiceUpdateCollaborationStatusResponses[keyof CollaborationServiceUpdateCollaborationStatusResponses];

export type CollaborationServiceAddOverlayToCollaborationData = {
    body: BodyCollaborationServiceAddOverlayToCollaboration;
    path?: never;
    query?: never;
    url: '/api/collaboration_service/add_overlay_to_collaboration';
};

export type CollaborationServiceAddOverlayToCollaborationErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CollaborationServiceAddOverlayToCollaborationError = CollaborationServiceAddOverlayToCollaborationErrors[keyof CollaborationServiceAddOverlayToCollaborationErrors];

export type CollaborationServiceAddOverlayToCollaborationResponses = {
    /**
     * Successful Response
     */
    200: Overlay;
};

export type CollaborationServiceAddOverlayToCollaborationResponse = CollaborationServiceAddOverlayToCollaborationResponses[keyof CollaborationServiceAddOverlayToCollaborationResponses];

export type CollaborationServiceGetCollaborationOverlaysData = {
    body: BodyCollaborationServiceGetCollaborationOverlays;
    path?: never;
    query?: never;
    url: '/api/collaboration_service/get_collaboration_overlays';
};

export type CollaborationServiceGetCollaborationOverlaysErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CollaborationServiceGetCollaborationOverlaysError = CollaborationServiceGetCollaborationOverlaysErrors[keyof CollaborationServiceGetCollaborationOverlaysErrors];

export type CollaborationServiceGetCollaborationOverlaysResponses = {
    /**
     * Successful Response
     */
    200: Array<Overlay>;
};

export type CollaborationServiceGetCollaborationOverlaysResponse = CollaborationServiceGetCollaborationOverlaysResponses[keyof CollaborationServiceGetCollaborationOverlaysResponses];

export type CollaborationServiceUpdateOverlayData = {
    body: BodyCollaborationServiceUpdateOverlay;
    path?: never;
    query?: never;
    url: '/api/collaboration_service/update_overlay';
};

export type CollaborationServiceUpdateOverlayErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CollaborationServiceUpdateOverlayError = CollaborationServiceUpdateOverlayErrors[keyof CollaborationServiceUpdateOverlayErrors];

export type CollaborationServiceUpdateOverlayResponses = {
    /**
     * Successful Response
     */
    200: Overlay;
};

export type CollaborationServiceUpdateOverlayResponse = CollaborationServiceUpdateOverlayResponses[keyof CollaborationServiceUpdateOverlayResponses];

export type CollaborationServiceDeleteOverlayData = {
    body: BodyCollaborationServiceDeleteOverlay;
    path?: never;
    query?: never;
    url: '/api/collaboration_service/delete_overlay';
};

export type CollaborationServiceDeleteOverlayErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CollaborationServiceDeleteOverlayError = CollaborationServiceDeleteOverlayErrors[keyof CollaborationServiceDeleteOverlayErrors];

export type CollaborationServiceDeleteOverlayResponses = {
    /**
     * Successful Response
     */
    200: boolean;
};

export type CollaborationServiceDeleteOverlayResponse = CollaborationServiceDeleteOverlayResponses[keyof CollaborationServiceDeleteOverlayResponses];

export type RenderServiceQueueRenderData = {
    body: BodyRenderServiceQueueRender;
    path?: never;
    query?: never;
    url: '/api/render_service/queue_render';
};

export type RenderServiceQueueRenderErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type RenderServiceQueueRenderError = RenderServiceQueueRenderErrors[keyof RenderServiceQueueRenderErrors];

export type RenderServiceQueueRenderResponses = {
    /**
     * Successful Response
     */
    200: Render;
};

export type RenderServiceQueueRenderResponse = RenderServiceQueueRenderResponses[keyof RenderServiceQueueRenderResponses];

export type RenderServiceGetRenderStatusData = {
    body: BodyRenderServiceGetRenderStatus;
    path?: never;
    query?: never;
    url: '/api/render_service/get_render_status';
};

export type RenderServiceGetRenderStatusErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type RenderServiceGetRenderStatusError = RenderServiceGetRenderStatusErrors[keyof RenderServiceGetRenderStatusErrors];

export type RenderServiceGetRenderStatusResponses = {
    /**
     * Successful Response
     */
    200: Render | null;
};

export type RenderServiceGetRenderStatusResponse = RenderServiceGetRenderStatusResponses[keyof RenderServiceGetRenderStatusResponses];

export type RenderServiceGetCollaborationRendersData = {
    body: BodyRenderServiceGetCollaborationRenders;
    path?: never;
    query?: never;
    url: '/api/render_service/get_collaboration_renders';
};

export type RenderServiceGetCollaborationRendersErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type RenderServiceGetCollaborationRendersError = RenderServiceGetCollaborationRendersErrors[keyof RenderServiceGetCollaborationRendersErrors];

export type RenderServiceGetCollaborationRendersResponses = {
    /**
     * Successful Response
     */
    200: Array<Render>;
};

export type RenderServiceGetCollaborationRendersResponse = RenderServiceGetCollaborationRendersResponses[keyof RenderServiceGetCollaborationRendersResponses];

export type RenderServiceCancelRenderData = {
    body: BodyRenderServiceCancelRender;
    path?: never;
    query?: never;
    url: '/api/render_service/cancel_render';
};

export type RenderServiceCancelRenderErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type RenderServiceCancelRenderError = RenderServiceCancelRenderErrors[keyof RenderServiceCancelRenderErrors];

export type RenderServiceCancelRenderResponses = {
    /**
     * Successful Response
     */
    200: boolean;
};

export type RenderServiceCancelRenderResponse = RenderServiceCancelRenderResponses[keyof RenderServiceCancelRenderResponses];

export type RenderServiceRetryRenderData = {
    body: BodyRenderServiceRetryRender;
    path?: never;
    query?: never;
    url: '/api/render_service/retry_render';
};

export type RenderServiceRetryRenderErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type RenderServiceRetryRenderError = RenderServiceRetryRenderErrors[keyof RenderServiceRetryRenderErrors];

export type RenderServiceRetryRenderResponses = {
    /**
     * Successful Response
     */
    200: Render;
};

export type RenderServiceRetryRenderResponse = RenderServiceRetryRenderResponses[keyof RenderServiceRetryRenderResponses];

export type RenderServiceGetRenderQueueStatusData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/render_service/get_render_queue_status';
};

export type RenderServiceGetRenderQueueStatusResponses = {
    /**
     * Successful Response
     */
    200: {
        [key: string]: number;
    };
};

export type RenderServiceGetRenderQueueStatusResponse = RenderServiceGetRenderQueueStatusResponses[keyof RenderServiceGetRenderQueueStatusResponses];

export type RecommendationEngineGetVideoOverlayRecommendationsData = {
    body: BodyRecommendationEngineGetVideoOverlayRecommendations;
    path?: never;
    query?: never;
    url: '/api/recommendation_engine/get_video_overlay_recommendations';
};

export type RecommendationEngineGetVideoOverlayRecommendationsErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type RecommendationEngineGetVideoOverlayRecommendationsError = RecommendationEngineGetVideoOverlayRecommendationsErrors[keyof RecommendationEngineGetVideoOverlayRecommendationsErrors];

export type RecommendationEngineGetVideoOverlayRecommendationsResponses = {
    /**
     * Successful Response
     */
    200: {
        [key: string]: unknown;
    };
};

export type RecommendationEngineGetVideoOverlayRecommendationsResponse = RecommendationEngineGetVideoOverlayRecommendationsResponses[keyof RecommendationEngineGetVideoOverlayRecommendationsResponses];

export type RecommendationEngineGetSimilarStyleRecommendationsData = {
    body: BodyRecommendationEngineGetSimilarStyleRecommendations;
    path?: never;
    query?: never;
    url: '/api/recommendation_engine/get_similar_style_recommendations';
};

export type RecommendationEngineGetSimilarStyleRecommendationsErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type RecommendationEngineGetSimilarStyleRecommendationsError = RecommendationEngineGetSimilarStyleRecommendationsErrors[keyof RecommendationEngineGetSimilarStyleRecommendationsErrors];

export type RecommendationEngineGetSimilarStyleRecommendationsResponses = {
    /**
     * Successful Response
     */
    200: {
        [key: string]: unknown;
    };
};

export type RecommendationEngineGetSimilarStyleRecommendationsResponse = RecommendationEngineGetSimilarStyleRecommendationsResponses[keyof RecommendationEngineGetSimilarStyleRecommendationsResponses];

export type RecommendationEngineTrackRecommendationInteractionData = {
    body: BodyRecommendationEngineTrackRecommendationInteraction;
    path?: never;
    query?: never;
    url: '/api/recommendation_engine/track_recommendation_interaction';
};

export type RecommendationEngineTrackRecommendationInteractionErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type RecommendationEngineTrackRecommendationInteractionError = RecommendationEngineTrackRecommendationInteractionErrors[keyof RecommendationEngineTrackRecommendationInteractionErrors];

export type RecommendationEngineTrackRecommendationInteractionResponses = {
    /**
     * Successful Response
     */
    200: boolean;
};

export type RecommendationEngineTrackRecommendationInteractionResponse = RecommendationEngineTrackRecommendationInteractionResponses[keyof RecommendationEngineTrackRecommendationInteractionResponses];

export type AiAnalysisServiceAnalyzeVideoForOverlaysData = {
    body: BodyAiAnalysisServiceAnalyzeVideoForOverlays;
    path?: never;
    query?: never;
    url: '/api/ai_analysis_service/analyze_video_for_overlays';
};

export type AiAnalysisServiceAnalyzeVideoForOverlaysErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type AiAnalysisServiceAnalyzeVideoForOverlaysError = AiAnalysisServiceAnalyzeVideoForOverlaysErrors[keyof AiAnalysisServiceAnalyzeVideoForOverlaysErrors];

export type AiAnalysisServiceAnalyzeVideoForOverlaysResponses = {
    /**
     * Successful Response
     */
    200: {
        [key: string]: unknown;
    };
};

export type AiAnalysisServiceAnalyzeVideoForOverlaysResponse = AiAnalysisServiceAnalyzeVideoForOverlaysResponses[keyof AiAnalysisServiceAnalyzeVideoForOverlaysResponses];

export type AiAnalysisServiceGetSmartOverlayRecommendationsData = {
    body: BodyAiAnalysisServiceGetSmartOverlayRecommendations;
    path?: never;
    query?: never;
    url: '/api/ai_analysis_service/get_smart_overlay_recommendations';
};

export type AiAnalysisServiceGetSmartOverlayRecommendationsErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type AiAnalysisServiceGetSmartOverlayRecommendationsError = AiAnalysisServiceGetSmartOverlayRecommendationsErrors[keyof AiAnalysisServiceGetSmartOverlayRecommendationsErrors];

export type AiAnalysisServiceGetSmartOverlayRecommendationsResponses = {
    /**
     * Successful Response
     */
    200: Array<{
        [key: string]: unknown;
    }>;
};

export type AiAnalysisServiceGetSmartOverlayRecommendationsResponse = AiAnalysisServiceGetSmartOverlayRecommendationsResponses[keyof AiAnalysisServiceGetSmartOverlayRecommendationsResponses];